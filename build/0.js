(window["webpackJsonp_name_"] = window["webpackJsonp_name_"] || []).push([[0],{

/***/ "./dist/esm/_commonjsHelpers-ba3f0406.js":
/*!***********************************************!*\
  !*** ./dist/esm/_commonjsHelpers-ba3f0406.js ***!
  \***********************************************/
/*! exports provided: a, c, g */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return commonjsGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return createCommonjsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getDefaultExportFromCjs; });\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function require(path, base) {\n      return commonjsRequire();\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://%5Bname%5D/./dist/esm/_commonjsHelpers-ba3f0406.js?");

/***/ }),

/***/ "./dist/esm/pragma-picker.entry.js":
/*!*****************************************!*\
  !*** ./dist/esm/pragma-picker.entry.js ***!
  \*****************************************/
/*! exports provided: pragma_picker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pragma_picker\", function() { return PragmaPicker; });\n/* harmony import */ var _index_2cbd2666_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-2cbd2666.js */ \"./dist/esm/index-2cbd2666.js\");\n/* harmony import */ var _types_011ef867_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types-011ef867.js */ \"./dist/esm/types-011ef867.js\");\n/* harmony import */ var _commonjsHelpers_ba3f0406_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_commonjsHelpers-ba3f0406.js */ \"./dist/esm/_commonjsHelpers-ba3f0406.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n\nvar papaparse_min = Object(_commonjsHelpers_ba3f0406_js__WEBPACK_IMPORTED_MODULE_2__[\"c\"])(function (module, exports) {\n  /* @license\n  Papa Parse\n  v5.3.0\n  https://github.com/mholt/PapaParse\n  License: MIT\n  */\n  !function (e, t) {\n    module.exports = t();\n  }(_commonjsHelpers_ba3f0406_js__WEBPACK_IMPORTED_MODULE_2__[\"a\"], function s() {\n    var f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {};\n    var n = !f.document && !!f.postMessage,\n        o = n && /blob:/i.test((f.location || {}).protocol),\n        a = {},\n        h = 0,\n        b = {\n      parse: function parse(e, t) {\n        var i = (t = t || {}).dynamicTyping || !1;\n        U(i) && (t.dynamicTypingFunction = i, i = {});\n\n        if (t.dynamicTyping = i, t.transform = !!U(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n          var r = function () {\n            if (!b.WORKERS_SUPPORTED) return !1;\n            var e = (i = f.URL || f.webkitURL || null, r = s.toString(), b.BLOB_URL || (b.BLOB_URL = i.createObjectURL(new Blob([\"(\", r, \")();\"], {\n              type: \"text/javascript\"\n            })))),\n                t = new f.Worker(e);\n            var i, r;\n            return t.onmessage = m, t.id = h++, a[t.id] = t;\n          }();\n\n          return r.userStep = t.step, r.userChunk = t.chunk, r.userComplete = t.complete, r.userError = t.error, t.step = U(t.step), t.chunk = U(t.chunk), t.complete = U(t.complete), t.error = U(t.error), delete t.worker, void r.postMessage({\n            input: e,\n            config: t,\n            workerId: r.id\n          });\n        }\n\n        var n = null;\n        \"string\" == typeof e ? n = t.download ? new l(t) : new p(t) : !0 === e.readable && U(e.read) && U(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n        return n.stream(e);\n      },\n      unparse: function unparse(e, t) {\n        var n = !1,\n            m = !0,\n            _ = \",\",\n            v = \"\\r\\n\",\n            s = '\"',\n            a = s + s,\n            i = !1,\n            r = null,\n            o = !1;\n        !function () {\n          if (\"object\" != _typeof(t)) return;\n          \"string\" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n            return -1 !== t.delimiter.indexOf(e);\n          }).length || (_ = t.delimiter);\n          (\"boolean\" == typeof t.quotes || \"function\" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n          \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (i = t.skipEmptyLines);\n          \"string\" == typeof t.newline && (v = t.newline);\n          \"string\" == typeof t.quoteChar && (s = t.quoteChar);\n          \"boolean\" == typeof t.header && (m = t.header);\n\n          if (Array.isArray(t.columns)) {\n            if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n            r = t.columns;\n          }\n\n          void 0 !== t.escapeChar && (a = t.escapeChar + s);\n          \"boolean\" == typeof t.escapeFormulae && (o = t.escapeFormulae);\n        }();\n        var h = new RegExp(q(s), \"g\");\n        \"string\" == typeof e && (e = JSON.parse(e));\n\n        if (Array.isArray(e)) {\n          if (!e.length || Array.isArray(e[0])) return f(null, e, i);\n          if (\"object\" == _typeof(e[0])) return f(r || u(e[0]), e, i);\n        } else if (\"object\" == _typeof(e)) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : u(e.data[0])), Array.isArray(e.data[0]) || \"object\" == _typeof(e.data[0]) || (e.data = [e.data])), f(e.fields || [], e.data || [], i);\n\n        throw new Error(\"Unable to serialize unrecognized input\");\n\n        function u(e) {\n          if (\"object\" != _typeof(e)) return [];\n          var t = [];\n\n          for (var i in e) {\n            t.push(i);\n          }\n\n          return t;\n        }\n\n        function f(e, t, i) {\n          var r = \"\";\n          \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n          var n = Array.isArray(e) && 0 < e.length,\n              s = !Array.isArray(t[0]);\n\n          if (n && m) {\n            for (var a = 0; a < e.length; a++) {\n              0 < a && (r += _), r += y(e[a], a);\n            }\n\n            0 < t.length && (r += v);\n          }\n\n          for (var o = 0; o < t.length; o++) {\n            var h = n ? e.length : t[o].length,\n                u = !1,\n                f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n            if (i && !n && (u = \"greedy\" === i ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === i && n) {\n              for (var d = [], l = 0; l < h; l++) {\n                var c = s ? e[l] : l;\n                d.push(t[o][c]);\n              }\n\n              u = \"\" === d.join(\"\").trim();\n            }\n\n            if (!u) {\n              for (var p = 0; p < h; p++) {\n                0 < p && !f && (r += _);\n                var g = n && s ? e[p] : p;\n                r += y(t[o][g], p);\n              }\n\n              o < t.length - 1 && (!i || 0 < h && !f) && (r += v);\n            }\n          }\n\n          return r;\n        }\n\n        function y(e, t) {\n          if (null == e) return \"\";\n          if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n          !0 === o && \"string\" == typeof e && null !== e.match(/^[=+\\-@].*$/) && (e = \"'\" + e);\n\n          var i = e.toString().replace(h, a),\n              r = \"boolean\" == typeof n && n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n            for (var i = 0; i < t.length; i++) {\n              if (-1 < e.indexOf(t[i])) return !0;\n            }\n\n            return !1;\n          }(i, b.BAD_DELIMITERS) || -1 < i.indexOf(_) || \" \" === i.charAt(0) || \" \" === i.charAt(i.length - 1);\n\n          return r ? s + i + s : i;\n        }\n      }\n    };\n\n    if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = \"\\uFEFF\", b.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = \",\", b.Parser = w, b.ParserHandle = i, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = g, f.jQuery) {\n      var d = f.jQuery;\n\n      d.fn.parse = function (o) {\n        var i = o.config || {},\n            h = [];\n        return this.each(function (e) {\n          if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n          for (var t = 0; t < this.files.length; t++) {\n            h.push({\n              file: this.files[t],\n              inputElem: this,\n              instanceConfig: d.extend({}, i)\n            });\n          }\n        }), e(), this;\n\n        function e() {\n          if (0 !== h.length) {\n            var e,\n                t,\n                i,\n                r,\n                n = h[0];\n\n            if (U(o.before)) {\n              var s = o.before(n.file, n.inputElem);\n\n              if (\"object\" == _typeof(s)) {\n                if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, i = n.inputElem, r = s.reason, void (U(o.error) && o.error({\n                  name: e\n                }, t, i, r));\n                if (\"skip\" === s.action) return void u();\n                \"object\" == _typeof(s.config) && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n              } else if (\"skip\" === s) return void u();\n            }\n\n            var a = n.instanceConfig.complete;\n            n.instanceConfig.complete = function (e) {\n              U(a) && a(e, n.file, n.inputElem), u();\n            }, b.parse(n.file, n.instanceConfig);\n          } else U(o.complete) && o.complete();\n        }\n\n        function u() {\n          h.splice(0, 1), e();\n        }\n      };\n    }\n\n    function u(e) {\n      this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n        data: [],\n        errors: [],\n        meta: {}\n      }, function (e) {\n        var t = E(e);\n        t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n        this._handle = new i(t), (this._handle.streamer = this)._config = t;\n      }.call(this, e), this.parseChunk = function (e, t) {\n        if (this.isFirstChunk && U(this._config.beforeFirstChunk)) {\n          var i = this._config.beforeFirstChunk(e);\n\n          void 0 !== i && (e = i);\n        }\n\n        this.isFirstChunk = !1, this._halted = !1;\n        var r = this._partialLine + e;\n        this._partialLine = \"\";\n\n        var n = this._handle.parse(r, this._baseIndex, !this._finished);\n\n        if (!this._handle.paused() && !this._handle.aborted()) {\n          var s = n.meta.cursor;\n          this._finished || (this._partialLine = r.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n          var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n          if (o) f.postMessage({\n            results: n,\n            workerId: b.WORKER_ID,\n            finished: a\n          });else if (U(this._config.chunk) && !t) {\n            if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n            n = void 0, this._completeResults = void 0;\n          }\n          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !U(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n        }\n\n        this._halted = !0;\n      }, this._sendError = function (e) {\n        U(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n          workerId: b.WORKER_ID,\n          error: e,\n          finished: !1\n        });\n      };\n    }\n\n    function l(e) {\n      var r;\n      (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), u.call(this, e), this._nextChunk = n ? function () {\n        this._readChunk(), this._chunkLoaded();\n      } : function () {\n        this._readChunk();\n      }, this.stream = function (e) {\n        this._input = e, this._nextChunk();\n      }, this._readChunk = function () {\n        if (this._finished) this._chunkLoaded();else {\n          if (r = new XMLHttpRequest(), this._config.withCredentials && (r.withCredentials = this._config.withCredentials), n || (r.onload = y(this._chunkLoaded, this), r.onerror = y(this._chunkError, this)), r.open(this._config.downloadRequestBody ? \"POST\" : \"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n            var e = this._config.downloadRequestHeaders;\n\n            for (var t in e) {\n              r.setRequestHeader(t, e[t]);\n            }\n          }\n\n          if (this._config.chunkSize) {\n            var i = this._start + this._config.chunkSize - 1;\n            r.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + i);\n          }\n\n          try {\n            r.send(this._config.downloadRequestBody);\n          } catch (e) {\n            this._chunkError(e.message);\n          }\n\n          n && 0 === r.status && this._chunkError();\n        }\n      }, this._chunkLoaded = function () {\n        4 === r.readyState && (r.status < 200 || 400 <= r.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n          var t = e.getResponseHeader(\"Content-Range\");\n          if (null === t) return -1;\n          return parseInt(t.substring(t.lastIndexOf(\"/\") + 1));\n        }(r), this.parseChunk(r.responseText)));\n      }, this._chunkError = function (e) {\n        var t = r.statusText || e;\n\n        this._sendError(new Error(t));\n      };\n    }\n\n    function c(e) {\n      var r, n;\n      (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), u.call(this, e);\n      var s = \"undefined\" != typeof FileReader;\n      this.stream = function (e) {\n        this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((r = new FileReader()).onload = y(this._chunkLoaded, this), r.onerror = y(this._chunkError, this)) : r = new FileReaderSync(), this._nextChunk();\n      }, this._nextChunk = function () {\n        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n      }, this._readChunk = function () {\n        var e = this._input;\n\n        if (this._config.chunkSize) {\n          var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n          e = n.call(e, this._start, t);\n        }\n\n        var i = r.readAsText(e, this._config.encoding);\n        s || this._chunkLoaded({\n          target: {\n            result: i\n          }\n        });\n      }, this._chunkLoaded = function (e) {\n        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n      }, this._chunkError = function () {\n        this._sendError(r.error);\n      };\n    }\n\n    function p(e) {\n      var i;\n      u.call(this, e = e || {}), this.stream = function (e) {\n        return i = e, this._nextChunk();\n      }, this._nextChunk = function () {\n        if (!this._finished) {\n          var e,\n              t = this._config.chunkSize;\n          return t ? (e = i.substring(0, t), i = i.substring(t)) : (e = i, i = \"\"), this._finished = !i, this.parseChunk(e);\n        }\n      };\n    }\n\n    function g(e) {\n      u.call(this, e = e || {});\n      var t = [],\n          i = !0,\n          r = !1;\n      this.pause = function () {\n        u.prototype.pause.apply(this, arguments), this._input.pause();\n      }, this.resume = function () {\n        u.prototype.resume.apply(this, arguments), this._input.resume();\n      }, this.stream = function (e) {\n        this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n      }, this._checkIsFinished = function () {\n        r && 1 === t.length && (this._finished = !0);\n      }, this._nextChunk = function () {\n        this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : i = !0;\n      }, this._streamData = y(function (e) {\n        try {\n          t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), i && (i = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n        } catch (e) {\n          this._streamError(e);\n        }\n      }, this), this._streamError = y(function (e) {\n        this._streamCleanUp(), this._sendError(e);\n      }, this), this._streamEnd = y(function () {\n        this._streamCleanUp(), r = !0, this._streamData(\"\");\n      }, this), this._streamCleanUp = y(function () {\n        this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n      }, this);\n    }\n\n    function i(_) {\n      var a,\n          o,\n          h,\n          r = Math.pow(2, 53),\n          n = -r,\n          s = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,\n          u = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,\n          t = this,\n          i = 0,\n          f = 0,\n          d = !1,\n          e = !1,\n          l = [],\n          c = {\n        data: [],\n        errors: [],\n        meta: {}\n      };\n\n      if (U(_.step)) {\n        var p = _.step;\n\n        _.step = function (e) {\n          if (c = e, m()) g();else {\n            if (g(), 0 === c.data.length) return;\n            i += e.data.length, _.preview && i > _.preview ? o.abort() : (c.data = c.data[0], p(c, t));\n          }\n        };\n      }\n\n      function v(e) {\n        return \"greedy\" === _.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n      }\n\n      function g() {\n        if (c && h && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + b.DefaultDelimiter + \"'\"), h = !1), _.skipEmptyLines) for (var e = 0; e < c.data.length; e++) {\n          v(c.data[e]) && c.data.splice(e--, 1);\n        }\n        return m() && function () {\n          if (!c) return;\n\n          function e(e, t) {\n            U(_.transformHeader) && (e = _.transformHeader(e, t)), l.push(e);\n          }\n\n          if (Array.isArray(c.data[0])) {\n            for (var t = 0; m() && t < c.data.length; t++) {\n              c.data[t].forEach(e);\n            }\n\n            c.data.splice(0, 1);\n          } else c.data.forEach(e);\n        }(), function () {\n          if (!c || !_.header && !_.dynamicTyping && !_.transform) return c;\n\n          function e(e, t) {\n            var i,\n                r = _.header ? {} : [];\n\n            for (i = 0; i < e.length; i++) {\n              var n = i,\n                  s = e[i];\n              _.header && (n = i >= l.length ? \"__parsed_extra\" : l[i]), _.transform && (s = _.transform(s, n)), s = y(n, s), \"__parsed_extra\" === n ? (r[n] = r[n] || [], r[n].push(s)) : r[n] = s;\n            }\n\n            return _.header && (i > l.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + l.length + \" fields but parsed \" + i, f + t) : i < l.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + l.length + \" fields but parsed \" + i, f + t)), r;\n          }\n\n          var t = 1;\n          !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n          _.header && c.meta && (c.meta.fields = l);\n          return f += t, c;\n        }();\n      }\n\n      function m() {\n        return _.header && 0 === l.length;\n      }\n\n      function y(e, t) {\n        return i = e, _.dynamicTypingFunction && void 0 === _.dynamicTyping[i] && (_.dynamicTyping[i] = _.dynamicTypingFunction(i)), !0 === (_.dynamicTyping[i] || _.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (function (e) {\n          if (s.test(e)) {\n            var t = parseFloat(e);\n            if (n < t && t < r) return !0;\n          }\n\n          return !1;\n        }(t) ? parseFloat(t) : u.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n        var i;\n      }\n\n      function k(e, t, i, r) {\n        var n = {\n          type: e,\n          code: t,\n          message: i\n        };\n        void 0 !== r && (n.row = r), c.errors.push(n);\n      }\n\n      this.parse = function (e, t, i) {\n        var r = _.quoteChar || '\"';\n        if (_.newline || (_.newline = function (e, t) {\n          e = e.substring(0, 1048576);\n          var i = new RegExp(q(t) + \"([^]*?)\" + q(t), \"gm\"),\n              r = (e = e.replace(i, \"\")).split(\"\\r\"),\n              n = e.split(\"\\n\"),\n              s = 1 < n.length && n[0].length < r[0].length;\n          if (1 === r.length || s) return \"\\n\";\n\n          for (var a = 0, o = 0; o < r.length; o++) {\n            \"\\n\" === r[o][0] && a++;\n          }\n\n          return a >= r.length / 2 ? \"\\r\\n\" : \"\\r\";\n        }(e, r)), h = !1, _.delimiter) U(_.delimiter) && (_.delimiter = _.delimiter(e), c.meta.delimiter = _.delimiter);else {\n          var n = function (e, t, i, r, n) {\n            var s, a, o, h;\n            n = n || [\",\", \"\\t\", \"|\", \";\", b.RECORD_SEP, b.UNIT_SEP];\n\n            for (var u = 0; u < n.length; u++) {\n              var f = n[u],\n                  d = 0,\n                  l = 0,\n                  c = 0;\n              o = void 0;\n\n              for (var p = new w({\n                comments: r,\n                delimiter: f,\n                newline: t,\n                preview: 10\n              }).parse(e), g = 0; g < p.data.length; g++) {\n                if (i && v(p.data[g])) c++;else {\n                  var m = p.data[g].length;\n                  l += m, void 0 !== o ? 0 < m && (d += Math.abs(m - o), o = m) : o = m;\n                }\n              }\n\n              0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === h || h < l) && 1.99 < l && (a = d, s = f, h = l);\n            }\n\n            return {\n              successful: !!(_.delimiter = s),\n              bestDelimiter: s\n            };\n          }(e, _.newline, _.skipEmptyLines, _.comments, _.delimitersToGuess);\n\n          n.successful ? _.delimiter = n.bestDelimiter : (h = !0, _.delimiter = b.DefaultDelimiter), c.meta.delimiter = _.delimiter;\n        }\n        var s = E(_);\n        return _.preview && _.header && s.preview++, a = e, o = new w(s), c = o.parse(a, t, i), g(), d ? {\n          meta: {\n            paused: !0\n          }\n        } : c || {\n          meta: {\n            paused: !1\n          }\n        };\n      }, this.paused = function () {\n        return d;\n      }, this.pause = function () {\n        d = !0, o.abort(), a = U(_.chunk) ? \"\" : a.substring(o.getCharIndex());\n      }, this.resume = function () {\n        t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(t.resume, 3);\n      }, this.aborted = function () {\n        return e;\n      }, this.abort = function () {\n        e = !0, o.abort(), c.meta.aborted = !0, U(_.complete) && _.complete(c), a = \"\";\n      };\n    }\n\n    function q(e) {\n      return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    }\n\n    function w(e) {\n      var O,\n          D = (e = e || {}).delimiter,\n          I = e.newline,\n          T = e.comments,\n          A = e.step,\n          L = e.preview,\n          F = e.fastMode,\n          z = O = void 0 === e.quoteChar ? '\"' : e.quoteChar;\n      if (void 0 !== e.escapeChar && (z = e.escapeChar), (\"string\" != typeof D || -1 < b.BAD_DELIMITERS.indexOf(D)) && (D = \",\"), T === D) throw new Error(\"Comment character same as delimiter\");\n      !0 === T ? T = \"#\" : (\"string\" != typeof T || -1 < b.BAD_DELIMITERS.indexOf(T)) && (T = !1), \"\\n\" !== I && \"\\r\" !== I && \"\\r\\n\" !== I && (I = \"\\n\");\n      var M = 0,\n          j = !1;\n      this.parse = function (a, t, i) {\n        if (\"string\" != typeof a) throw new Error(\"Input must be a string\");\n        var r = a.length,\n            e = D.length,\n            n = I.length,\n            s = T.length,\n            o = U(A),\n            h = [],\n            u = [],\n            f = [],\n            d = M = 0;\n        if (!a) return R();\n\n        if (F || !1 !== F && -1 === a.indexOf(O)) {\n          for (var l = a.split(I), c = 0; c < l.length; c++) {\n            if (f = l[c], M += f.length, c !== l.length - 1) M += I.length;else if (i) return R();\n\n            if (!T || f.substring(0, s) !== T) {\n              if (o) {\n                if (h = [], b(f.split(D)), S(), j) return R();\n              } else b(f.split(D));\n\n              if (L && L <= c) return h = h.slice(0, L), R(!0);\n            }\n          }\n\n          return R();\n        }\n\n        for (var p = a.indexOf(D, M), g = a.indexOf(I, M), m = new RegExp(q(z) + q(O), \"g\"), _ = a.indexOf(O, M);;) {\n          if (a[M] !== O) {\n            if (T && 0 === f.length && a.substring(M, M + s) === T) {\n              if (-1 === g) return R();\n              M = g + n, g = a.indexOf(I, M), p = a.indexOf(D, M);\n            } else {\n              if (-1 !== p && (p < g || -1 === g)) {\n                if (!(p < _)) {\n                  f.push(a.substring(M, p)), M = p + e, p = a.indexOf(D, M);\n                  continue;\n                }\n\n                var v = x(p, _, g);\n\n                if (v && void 0 !== v.nextDelim) {\n                  p = v.nextDelim, _ = v.quoteSearch, f.push(a.substring(M, p)), M = p + e, p = a.indexOf(D, M);\n                  continue;\n                }\n              }\n\n              if (-1 === g) break;\n              if (f.push(a.substring(M, g)), C(g + n), o && (S(), j)) return R();\n              if (L && h.length >= L) return R(!0);\n            }\n          } else for (_ = M, M++;;) {\n            if (-1 === (_ = a.indexOf(O, _ + 1))) return i || u.push({\n              type: \"Quotes\",\n              code: \"MissingQuotes\",\n              message: \"Quoted field unterminated\",\n              row: h.length,\n              index: M\n            }), E();\n            if (_ === r - 1) return E(a.substring(M, _).replace(m, O));\n\n            if (O !== z || a[_ + 1] !== z) {\n              if (O === z || 0 === _ || a[_ - 1] !== z) {\n                -1 !== p && p < _ + 1 && (p = a.indexOf(D, _ + 1)), -1 !== g && g < _ + 1 && (g = a.indexOf(I, _ + 1));\n                var y = w(-1 === g ? p : Math.min(p, g));\n\n                if (a[_ + 1 + y] === D) {\n                  f.push(a.substring(M, _).replace(m, O)), a[M = _ + 1 + y + e] !== O && (_ = a.indexOf(O, M)), p = a.indexOf(D, M), g = a.indexOf(I, M);\n                  break;\n                }\n\n                var k = w(g);\n\n                if (a.substring(_ + 1 + k, _ + 1 + k + n) === I) {\n                  if (f.push(a.substring(M, _).replace(m, O)), C(_ + 1 + k + n), p = a.indexOf(D, M), _ = a.indexOf(O, M), o && (S(), j)) return R();\n                  if (L && h.length >= L) return R(!0);\n                  break;\n                }\n\n                u.push({\n                  type: \"Quotes\",\n                  code: \"InvalidQuotes\",\n                  message: \"Trailing quote on quoted field is malformed\",\n                  row: h.length,\n                  index: M\n                }), _++;\n              }\n            } else _++;\n          }\n        }\n\n        return E();\n\n        function b(e) {\n          h.push(e), d = M;\n        }\n\n        function w(e) {\n          var t = 0;\n\n          if (-1 !== e) {\n            var i = a.substring(_ + 1, e);\n            i && \"\" === i.trim() && (t = i.length);\n          }\n\n          return t;\n        }\n\n        function E(e) {\n          return i || (void 0 === e && (e = a.substring(M)), f.push(e), M = r, b(f), o && S()), R();\n        }\n\n        function C(e) {\n          M = e, b(f), f = [], g = a.indexOf(I, M);\n        }\n\n        function R(e) {\n          return {\n            data: h,\n            errors: u,\n            meta: {\n              delimiter: D,\n              linebreak: I,\n              aborted: j,\n              truncated: !!e,\n              cursor: d + (t || 0)\n            }\n          };\n        }\n\n        function S() {\n          A(R()), h = [], u = [];\n        }\n\n        function x(e, t, i) {\n          var r = {\n            nextDelim: void 0,\n            quoteSearch: void 0\n          },\n              n = a.indexOf(O, t + 1);\n\n          if (t < e && e < n && (n < i || -1 === i)) {\n            var s = a.indexOf(D, n);\n            if (-1 === s) return r;\n            n < s && (n = a.indexOf(O, n + 1)), r = x(s, n, i);\n          } else r = {\n            nextDelim: e,\n            quoteSearch: t\n          };\n\n          return r;\n        }\n      }, this.abort = function () {\n        j = !0;\n      }, this.getCharIndex = function () {\n        return M;\n      };\n    }\n\n    function m(e) {\n      var t = e.data,\n          i = a[t.workerId],\n          r = !1;\n      if (t.error) i.userError(t.error, t.file);else if (t.results && t.results.data) {\n        var n = {\n          abort: function abort() {\n            r = !0, _(t.workerId, {\n              data: [],\n              errors: [],\n              meta: {\n                aborted: !0\n              }\n            });\n          },\n          pause: v,\n          resume: v\n        };\n\n        if (U(i.userStep)) {\n          for (var s = 0; s < t.results.data.length && (i.userStep({\n            data: t.results.data[s],\n            errors: t.results.errors,\n            meta: t.results.meta\n          }, n), !r); s++) {\n            ;\n          }\n\n          delete t.results;\n        } else U(i.userChunk) && (i.userChunk(t.results, n, t.file), delete t.results);\n      }\n      t.finished && !r && _(t.workerId, t.results);\n    }\n\n    function _(e, t) {\n      var i = a[e];\n      U(i.userComplete) && i.userComplete(t), i.terminate(), delete a[e];\n    }\n\n    function v() {\n      throw new Error(\"Not implemented.\");\n    }\n\n    function E(e) {\n      if (\"object\" != _typeof(e) || null === e) return e;\n      var t = Array.isArray(e) ? [] : {};\n\n      for (var i in e) {\n        t[i] = E(e[i]);\n      }\n\n      return t;\n    }\n\n    function y(e, t) {\n      return function () {\n        e.apply(t, arguments);\n      };\n    }\n\n    function U(e) {\n      return \"function\" == typeof e;\n    }\n\n    return o && (f.onmessage = function (e) {\n      var t = e.data;\n      void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n      if (\"string\" == typeof t.input) f.postMessage({\n        workerId: b.WORKER_ID,\n        results: b.parse(t.input, t.config),\n        finished: !0\n      });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n        var i = b.parse(t.input, t.config);\n        i && f.postMessage({\n          workerId: b.WORKER_ID,\n          results: i,\n          finished: !0\n        });\n      }\n    }), (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(u.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (g.prototype = Object.create(u.prototype)).constructor = g, b;\n  });\n});\n\nvar PragmaPicker = /*#__PURE__*/function () {\n  function PragmaPicker(hostRef) {\n    _classCallCheck(this, PragmaPicker);\n\n    Object(_index_2cbd2666_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n    /**\n     * Pragma field definition.\n     */\n\n    this.field = _types_011ef867_js__WEBPACK_IMPORTED_MODULE_1__[\"d\"];\n    /**\n     * The field's value.\n     */\n\n    this.value = false;\n    /**\n     * Whether the field is disabled.\n     */\n\n    this.disabled = false;\n    /**\n     * Source URL to load picker options from.\n     */\n\n    this.source = '';\n    /**\n     * Placeholder value displayed when an option hasn't been selected.\n     */\n\n    this.placeholder = '';\n  }\n  /**\n   * Handle the component loading.\n   */\n\n\n  _createClass(PragmaPicker, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.parseFieldDefinition(this.field, _types_011ef867_js__WEBPACK_IMPORTED_MODULE_1__[\"d\"]);\n    }\n    /**\n     * Parse the field attribute when it changes.\n     *\n     * @param {object|string} newValue\n     * @param {object|string} oldValue\n     */\n\n  }, {\n    key: \"parseFieldDefinition\",\n    value: function parseFieldDefinition(newValue, oldValue) {\n      this.field = Object(_types_011ef867_js__WEBPACK_IMPORTED_MODULE_1__[\"p\"])(this.field, oldValue, newValue);\n\n      if (!this.field.options) {\n        this.field.options = {};\n      }\n\n      this.path = this.path || this.field.path;\n      this.label = this.label || this.field.label;\n      this.value = this.value || this.field.value;\n      this.disabled = this.disabled || this.field.disabled;\n      this.placeholder = this.placeholder || this.field.options.placeholder;\n      this.source = this.source || this.field.options.source;\n      this.target = this.target || this.field.options.target;\n      this.listPath = this.listPath || this.field.options.listPath;\n      this.labelKey = this.labelKey || this.field.options.labelKey;\n      this.valueKey = this.valueKey || this.field.options.valueKey; // TODO: Define further properties\n    }\n  }, {\n    key: \"componentWillRender\",\n    value: function componentWillRender() {\n      var _this = this;\n\n      // TODO: Load options from source if available\n      if (this.source) {\n        return fetch(this.source).then(function (response) {\n          return response.text();\n        }).then(this.parseOptions).then(this.updateOptions)[\"catch\"](function (error) {\n          console.error(\"Error loading source data for picker field \".concat(_this.path), error);\n        });\n      }\n    }\n    /**\n     * Parse source data.\n     *\n     * Uses Papa Parse for CSV data.\n     *\n     * @param {string} data\n     */\n\n  }, {\n    key: \"parseOptions\",\n    value: function () {\n      var _parseOptions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", papaparse_min.parse(data, {\n                  delimiter: ',',\n                  header: true,\n                  dynamicTyping: true //worker: true // TODO: Try this out later\n\n                }).data);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function parseOptions(_x) {\n        return _parseOptions.apply(this, arguments);\n      }\n\n      return parseOptions;\n    }()\n  }, {\n    key: \"updateOptions\",\n    value: function () {\n      var _updateOptions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(data) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('<pragma-picker> updateOptions()', data); // TODO: Update the options property\n                //       Update Choices instance options\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function updateOptions(_x2) {\n        return _updateOptions.apply(this, arguments);\n      }\n\n      return updateOptions;\n    }()\n    /**\n     * Determine whether to show a placeholder option.\n     */\n\n  }, {\n    key: \"showPlaceholder\",\n    value: function showPlaceholder() {\n      return !!this.placeholder;\n    }\n    /**\n     * Get the placeholder markup, if it is to be shown.\n     *\n     * Returns null if the placeholder is not to be shown.\n     */\n\n  }, {\n    key: \"getPlaceholder\",\n    value: function getPlaceholder() {\n      if (this.showPlaceholder()) {\n        return Object(_index_2cbd2666_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"option\", {\n          value: \"\"\n        }, this.placeholder);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\n      //   this.field,\n      //   this.path,\n      //   this.label,\n      //   this.value,\n      //   this.disabled,\n      //   this.source,\n      //   this.placeholder\n      // );\n      return [Object(_index_2cbd2666_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"select\", null, this.getPlaceholder(), Object(_index_2cbd2666_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null))];\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"field\": [\"parseFieldDefinition\"]\n      };\n    }\n  }]);\n\n  return PragmaPicker;\n}();\n\n\n\n//# sourceURL=webpack://%5Bname%5D/./dist/esm/pragma-picker.entry.js?");

/***/ }),

/***/ "./dist/esm/types-011ef867.js":
/*!************************************!*\
  !*** ./dist/esm/types-011ef867.js ***!
  \************************************/
/*! exports provided: d, p */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return defaultField; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return parseAndMergeFields; });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Parse and merge a set of field definitions.\n *\n * Accepts JSON object strings or JavaScript objects.\n *\n * If the first argument is an object, its reference is maintained.\n *\n * TODO: Use a proper merge function.\n *\n * @param {Array<string|object>} fields - The fields to parse and merge.\n * @return {object} The parsed Field\n */\nfunction parseAndMergeFields() {\n  for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n    fields[_key] = arguments[_key];\n  }\n\n  var parsedFields = fields.map(parseField);\n  /**\n   * @var {object} field\n   */\n\n  var field = parsedFields.shift();\n  return Object.assign(field, parsedFields.reduce(function (previous, current) {\n    return Object.assign(Object.assign({}, previous), Object.assign({}, current));\n  }));\n}\n/**\n * Parse a field definition from a JSON object string or a JavaScript object.\n *\n * Throws an error if the given value is not a string or an object.\n *\n * @param {string|object} field - The field definition to parse.\n * @return {object} The parsed field.\n * @throws {Error} If the given value is not a string or an object. Accepts null.\n */\n\n\nfunction parseField(field) {\n  if (field == null) return {};\n  field = parseJson(field);\n  if (!Array.isArray(field) && _typeof(field) !== 'object') throw Error('Field definition must be a JSON object string or an object literal'); // TODO: Check for Field type, when it's defined\n\n  return field;\n}\n/**\n * Loosely parse an value as JSON.\n *\n * Parses as JSON if the value is a string, otherwise returns as-is.\n *\n * @param {*} value\n * @return {*}\n */\n\n\nfunction parseJson(value) {\n  if (typeof value === 'string') value = JSON.parse(value);\n  return value;\n}\n/**\n * Default field definition.\n */\n\n\nvar defaultField = {\n  path: null,\n  name: null,\n  value: null,\n  options: {},\n  visible: true,\n  disabled: false\n};\n\n\n//# sourceURL=webpack://%5Bname%5D/./dist/esm/types-011ef867.js?");

/***/ })

}]);